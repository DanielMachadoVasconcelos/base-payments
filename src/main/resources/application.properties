spring.application.name=base-payments
spring.devtools.add-properties=true

# Hibernate SQL logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%15.15t] %-40.40logger{39} : %msg%n

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/orders
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.profiles.active=local

# Connection pool (HikariCP) configuration
spring.datasource.hikari.pool-name=base-payments-hikari
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.validation-timeout=5000

# Database initialization
spring.sql.init.platform=postgresql
spring.sql.init.schema=orders
spring.flyway.baseline-on-migrate = true
spring.flyway.default-schema=orders
spring.flyway.schemas=orders

# Kafka Bootstrap servers (matches the container name and exposed port)
spring.kafka.bootstrap-servers=localhost:9092

# Consumer configuration
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest

#Consumer deserializers
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer serialization
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.listener.missing-topics-fatal=false

# Spring security configuration
spring.security.enabled=true

# Jpa configuration
spring.jpa.show-sql=true
spring.jpa.format-sql=true

spring.jpa.properties.org.hibernate.envers.default_schema=orders
spring.jpa.properties.hibernate.default_schema=orders

## Jackson configuration
spring.jackson.property-naming-strategy=SNAKE_CASE
spring.jackson.serialization.write-dates-as-timestamps=false

# threads
spring.threads.virtual.enabled=true

# docker compose
spring.docker.compose.lifecycle-management=start_only

# modulith republish outstanding events
spring.modulith.republish-outstanding-events=true
spring.modulith.events.republish-outstanding-events-on-restart=true

# modulith events jdbc
spring.modulith.events.jdbc.schema-initialization-enabled=true
spring.modulith.events.jdbc.schema=orders
spring.modulith.events.jdbc.table=events
spring.modulith.events.jdbc.snapshot-table=snapshots
spring.modulith.events.jdbc.snapshot-schema=orders
spring.modulith.events.jdbc.snapshot-events=1000
spring.modulith.events.jdbc.snapshot-interval=1000

# SpringDoc configuration
springdoc.swagger-ui.path=/swagger-ui-html

# Management metrics configuration
management.metrics.tags.application=base-payments-service

# Management endpoints configuration
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.tracing.sampling.probability=1.0
management.zipkin.tracing.export.enabled=true
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.observations.annotations.enabled=true
management.observations.annotations.tags.application=base-payments-service

## Custom application properties for the base-payments module
issuer.client.base-url=http://localhost:8081

# Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=false
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
