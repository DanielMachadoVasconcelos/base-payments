name: Java CI with Gradle

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

permissions:
  checks: write
  pull-requests: write
  repository-projects: read
  contents: read
  issues: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: clean build -Djava.compiler.args="--enable-preview" --info --stacktrace

  start-docker:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432

      kafka:
        image: bitnami/kafka:latest
        ports:
          - 9092:9092

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Spin up Docker Compose resources
        run: docker compose up -d
        timeout-minutes: 5

  test:
    runs-on: ubuntu-latest
    needs: start-docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Tests with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: test -Djava.compiler.args="--enable-preview" --info --stacktrace

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/*.xml'

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: '**/build/reports/tests/test'

  shutdown-docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Clean up Docker Compose
        run: docker compose down